import SearchHeader from "@/components/SearchHeader";
import Head from "next/head";
import React, { useState } from "react";
import SearchOptions from "@/components/SearchOptions";
import { GetServerSideProps } from "next";
import Response from "@/Response";
import SearchResults from "@/components/SearchResults";
import { useRouter } from "next/router";
import PaginationButtons from "@/components/PaginationButtons";
import ImageResults from "@/components/ImageResults";

const Search = ({ results }: any) => {
  const router = useRouter();
  const [selected, setSelected] = useState(router.query.searchType || "All");
  console.log(selected);
  return (
    <div className="flex flex-col">
      <Head>
        <title>Search page</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link
          rel="icon"
          href="/favicon.ico"
        />
      </Head>

      <SearchHeader selected={selected} />
      <SearchOptions
        selected={selected}
        setSelected={setSelected}
      />
      {router.query.searchType === "image" ? (
        <ImageResults results={results} />
      ) : (
        <SearchResults results={results} />
      )}
      <PaginationButtons />
    </div>
  );
};

export default Search;

export async function getServerSideProps(ctx: any) {
  const startIndex = ctx.query.start || "1";
  const mockData = false;
  const data = mockData
    ? Response
    : await fetch(
        `https://www.googleapis.com/customsearch/v1?key=${
          process.env.NEXT_PUBLIC_GOOGLE_API_KEY
        }&cx=${process.env.NEXT_PUBLIC_CONTEXT_KEY}&q=${ctx.query.term}${
          ctx.query.searchType === "image" ? "&searchType=image" : ""
        }&start=${startIndex}`
      ).then((response) => response.json());

  return {
    props: {
      results: data,
    },
  };
}
